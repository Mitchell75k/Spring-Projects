package com.mitchell.esparza.burger_tracker.models;


import java.util.Date;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.PrePersist;
import jakarta.persistence.PreUpdate;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Max;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import org.springframework.format.annotation.DateTimeFormat;
import java.util.Objects;


@Entity
@Table(name="burgers")
public class Burger {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @NotNull
    @Size(min = 5, message="The burger's name must be at least 5 characters long.")
    private String name;

    @NotNull
    @Size(min = 5, message="The restaurant's name must be at least 5 characters long.")
    private String restaurant;

    @NotNull
    @Size(min = 1, max = 10, message="The burger's rating must be between 1-10.")
    private String rating;

    @NotNull
    @Size(min = 5, message="Notes must be at least 5 characters long.")
    @Column(columnDefinition = "TEXT") //making sure this column is of type TEXT instead of VARCHAR(255)
    private String notes;
    
    //This will not allow the createdAt column to be updated after creation
    @Column(updatable=false)
    @DateTimeFormat(pattern="yyyy-MM-dd") // @DateTimeFormat annotation tells Hibernate to format the date in the specified pattern
    private Date createdAt;
    @DateTimeFormat(pattern="yyyy-MM-dd")
    private Date updatedAt;

    public Burger() { //empty constructor will be used to create an instance of the Burger class that will be used to create a row in the burgers table
        
    }
    
    public Burger(String name, String restaurant, String rating, String notes) {
        //this.id = id; will be automatically generated by Hibernate and applied to the instance of the Burger class that we create 
        //same with this.createdAt and this.updatedAt 
        this.name = name;  
        this.restaurant = restaurant;
        this.rating = rating;
        this.notes = notes;
    }

    //getters and setters 
    @PrePersist                                         // @PrePersist runs the method right before the object is created
    protected void onCreate(){                         //this method will be used to set the createdAt attribute of the Burger class
        this.createdAt = new Date();
    }
    @PreUpdate                                          // @PreUpdate runs the method right before the object is updated
    protected void onUpdate(){                        //this method will be used to set the updatedAt attribute of the Burger class
        this.updatedAt = new Date();
    }



    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getRestaurant() {
        return this.restaurant;
    }

    public void setRestaurant(String restaurant) {
        this.restaurant = restaurant;
    }

    public String getRating() {
        return this.rating;
    }

    public void setRating(String rating) {
        this.rating = rating;
    }

    public String getNotes() {
        return this.notes;
    }

    public void setNotes(String notes) {
        this.notes = notes;
    }

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }
}