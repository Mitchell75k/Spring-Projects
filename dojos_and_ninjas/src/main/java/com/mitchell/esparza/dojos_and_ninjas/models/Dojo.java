package com.mitchell.esparza.dojos_and_ninjas.models;

import java.util.Date;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.PrePersist;
import jakarta.persistence.PreUpdate;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import org.springframework.format.annotation.DateTimeFormat;
import java.util.Objects;
import java.util.List;
import jakarta.persistence.OneToMany;

@Entity
@Table(name="Dojos")
public class Dojo {
    
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @NotNull
    @Size(min=2, message = "Name must be at least 2 characters")
    private String name;

    @OneToMany(mappedBy="dojo", cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    private List<Ninja> ninjas;
    
    //This will not allow the createdAt column to be updated after creation
    @Column(updatable=false)
    @DateTimeFormat(pattern="dd-MM-yyyy") // @DateTimeFormat annotation tells Hibernate to format the date in the specified pattern
    private Date createdAt;
    @DateTimeFormat(pattern="dd-MM-yyyy")
    private Date updatedAt;

    public Dojo() {
        //empty constructor will be used to create an instance of the Dojo class that will be used to create a row in the dojos table
    }
    
    public Dojo(String name) {
        //this.id = id; will be automatically generated by Hibernate and applied to the instance of the Dojo class that we create
        //same with this.createdAt and this.updatedAt
        this.name = name;
    }

    // getters and setters

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    public List<Ninja> getNinjas() {
        return this.ninjas;
    }

    public void setNinjas(List<Ninja> ninjas) {
        this.ninjas = ninjas;
    }

}
